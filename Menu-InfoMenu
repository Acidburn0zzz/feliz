Menu
----
Menu is an alternative to the bash 'select' function for use in shell scripts.
It generates a numbered menu in the centre of the screen. It can receive up to
3 arguments:
 1) A string array variable of the items to be listed;
 2) The prompt, and
 3) An optional one-word menu heading (which will be underlined by Menu) 

Example call: Menu "$Accessories" "Please choose one: " "Accessories"

The string array variable may be declared as follows:
VariableName="item1 item2 item3 ... " (Menu adds a 'Done' option at runtime) ...
Example: Accessories="Conky Geany Nautilus Terminator"
Or the array may be generated by a bash command ...
Example: Partitionlist=$(lsblk -l | grep 'part')

Menu sets 2 global variables for use by the calling function ...
 1) $Response - the item number selected by the user, and
 2) $Result - the label (from the variable array) of the item selected.

Menu uses 2 external functions:
 1) print_info (which centres text on the screen), and
 2) print_list (which aligns subsequent items under the first)
These functions must be available to the script

-----------------------------------------------------------------------
InfoMenu
----------
InfoMenu is specifically designed for displaying longer descriptions in a menu.
When an item is selected, Multimenu finds that item in a reference variable array of short (one-word) names, and saves it as the global variable $Result which may then be used by the calling function if desired.

Multimenu receives three arguments (three MUST be passed, even if one or more is empty):
 1) The primary file. That is, the string of short references;   
 2) An optional one-word heading (if passed, this will be diplayed and underlined);
 3) The name (only) of the reference array (this will be used to access the array;
Only $1 and $3 are essential - $2 is optional and may be left blank.

Example: InfoMenu "$Graphical" "Graphical" "LongGraph"
... or ...
Example: InfoMenu "$Office" "" "LongOffice"

InfoMenu is designed to be application-independent. The detail is in the arguments.

InfoMenu converts the name in $3 to reference the named file, then parses through that file, displaying the long description of each item on a numbered line, adding a "Done" option at
the bottom. The user is instructed to enter the number of the desired item, and after
checking the validity of the entry returns $Result.

InfoMenu accesses the same global variables as Menu
