
These menus are designed to be application-independent. The detail is in the arguments.

Notes:
a) The menuing functions have been rewritten in a self-contained module 'menugen'
b) The functions have been renamed, but the module includes two redirecting
   functions in case any modules are calling them by the old names.

menugen1 (previously Menu)
--------------------------
menugen1 is an alternative to the bash 'select' function for use in shell scripts to
generate a numbered menu in the centre of the screen.
It receives up to three string arguments:
 1) A simple string array variable of the items to be listed;
 2) An optional one-word menu heading (which will be underlined by Menu); 
 3) An optional alternative final item to be displayed instead of 'Done' (eg: 'Retry').
    If set to 'nodone', the menu will display without a Done option.

If the 3rd argument is required, there must be a 2nd argument, even if it is an empty string.

Example calls:
 Menu "$Accessories" "Accessories"
 Menu "Reboot Shutdown" "" "nodone"

The string array variable may be declared as follows:
VariableName="item1 item2 item3 ... " 
  Example: Accessories="Conky Geany Nautilus Terminator"
Or the array may be generated by a bash command ...
  Example: Partitionlist=$(lsblk -l | grep 'part')

menugen1 sets 2 global variables for use by the calling function ...
 1) $Response - the item number selected by the user, and
 2) $Result - the label (from the variable array) of the item selected.

menugen1 uses 2 built-in functions:
 1) PrintOne (which centres text on the screen), and
 2) PrintMany (which aligns subsequent items of a list under the first)

-----------------------------------------------------------------------

menugen2 (previously InfoMenu)
------------------------------
menugen2 is specifically designed for displaying longer descriptions in a menu.
When an item is selected, InfoMenu finds that item in a reference variable array
of short (one-word) names, and saves it as the global variable $Result which may
then be used by the calling function if desired.

menugen2 receives four arguments (three MUST be passed, even if one or more is empty):
 1) The primary file. That is, the string of short references;   
 2) An optional one-word heading (if passed, this will be diplayed and underlined);
 3) An optional alternative to be displayed instead of 'Done' (eg: 'Retry').
    If set to 'nodone', the menu will display without a Done option.
 4) The name (only) of the reference array (this will be used to access the array;
    Only $1 and $4 are essential - $2 and 3) are optional and may be blank strings.

Example: InfoMenu "$Graphical" "Graphical" "nodone" "LongGraph"
... or ...
Example: InfoMenu "$Office" "" "LongOffice"

menugen2 accesses the same global variables as menugen1 and uses the same two built-in functions
