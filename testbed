#!/bin/bash

# First experiments in incorporating tput into Achoo to align text as required
# Notes:
# 1) The _read function uses a universal Response variable. Check the possible effects of this
# 2) Can I redirect the system std output through _echo?

testbed() {

SwapFile="2G"
    TPecho "Making /swapfile"
    fallocate -l ${SwapFile} ${MOUNTPOINT}/swapfile >/dev/null 2> error.log
    CheckForError "${LINENO} 'mkswap /swapfile'" 1
    chmod 600 ${MOUNTPOINT}/swapfile >/dev/null 2>> error.log
    CheckForError "${LINENO} 'mkswap /swapfile'" 1
    mkswap ${MOUNTPOINT}/swapfile >/dev/null 2>> error.log
    CheckForError "${LINENO} 'mkswap /swapfile'" 1
    swapon ${MOUNTPOINT}/swapfile >/dev/null 2> error.log
    CheckForError "${LINENO} 'swapon /swapfile'" 1
  
}

# ~~~~~~~
#	Execute
# ~~~~~~~

# First check for external functions and variables files
if [[ -f `pwd`/achoovariables ]]; then
  source achoovariables
else
  echo "missing file: achoovariables"
  exit 1
fi

if [[ -f `pwd`/achoofuncs ]]; then
  source achoofuncs
else
  echo "missing file: achoofuncs"
  exit 1
fi

# Various variables
TypeList="Skip ext2 ext3 ext4 btrfs"	
PartitionList="sda1 sda2 sda3 sda4"

# Call the function 'testbed' holding code to be tested
testbed

echo "Finished"

exit

# Code for checking arrays
Counter=0
for i in ${AddPartList[@]}	
do
  echo ${AddPartList[$Counter]}
  echo ${AddPartLabel[$Counter]} 
  echo ${AddPartType[$Counter]}
  Counter=$((Counter+1))
done
